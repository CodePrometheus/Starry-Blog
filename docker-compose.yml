# update user set host = "%" where user = "root";
# alter user 'root'@'%' identified with mysql_native_password by 'root'; FLUSH PRIVILEGES;
# vim docker-compose.yml
# docker network create --driver bridge --subnet 172.69.0.0/24 --gateway 172.69.0.1 blog
# docker-compose up
version: "3.9"
services:
  mysql:
    image: mysql/mysql-server:8.0.32
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/config:/etc/mysql/conf.d
      - ./mysql/log:/var/log/mysql
    ports:
      - "3306:3306"
    networks:
      default:
        ipv4_address: 172.69.0.21

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      default:
        ipv4_address: 172.69.0.22

  canal-server:
    image: canal/canal-server
    container_name: canal-server
    depends_on:
      - rabbitmq
    restart: unless-stopped
    volumes:
      - ./canal/conf/canal.properties:/home/admin/canal-server/conf/canal.properties
      - ./canal/conf/instance.properties:/home/admin/canal-server/conf/example/instance.properties
      - ./canal/server-logs:/home/admin/canal-server/logs
    ports:
      - "11111:11111"
    networks:
      default:
        ipv4_address: 172.69.0.23

  redis:
    image: redis
    container_name: redis
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis/data:/data
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      default:
        ipv4_address: 172.69.0.24

  elasticsearch:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: elasticsearch
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ./es/conf/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./es/conf/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties
      - ./es/data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      default:
        ipv4_address: 172.69.0.25

  #  solr:
  #    image: solr:latest
  #    container_name: solr
  #    volumes:
  #      - ./solr:/opt/solrdata
  #    ports:
  #      - "8983:8983"
  #    networks:
  #      default:
  #        ipv4_address: 172.69.0.26

  lucene:
    image: cpelka/cassandra-lucene
    container_name: lucene
    networks:
      default:
        ipv4_address: 172.69.0.27

  canal-admin:
    image: canal/canal-admin
    container_name: canal-admin
    volumes:
      - ./canal/admin-logs:/home/admin/canal-admin/logs
    ports:
      - "8089:8089"
    environment:
      - server.port=8089
      - canal.adminUser=admin
      - canal.adminPasswd=admin
    networks:
      default:
        ipv4_address: 172.69.0.28

  #  kibana:
  #    image: kibana:8.5.2
  #    container_name: kibana
  #    environment:
  #      ELASTICSEARCH_URL: http://elasticsearch:9200
  #    links:
  #      - elasticsearch:elasticsearch
  #    ports:
  #      - "5601:5601"
  #    depends_on:
  #      - elasticsearch
  #    networks:
  #      default:
  #        ipv4_address: 172.69.0.29

  portainer:
    image: 6053537/portainer-ce
    container_name: portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer_data:/data
    networks:
      default:
        ipv4_address: 172.69.0.31

networks:
  default:
    name: blog
