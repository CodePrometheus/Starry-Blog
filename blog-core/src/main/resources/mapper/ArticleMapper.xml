<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.star.inf.mapper.ArticleMapper">
    <resultMap id="articleHomeResultMap" type="com.star.inf.dto.ArticleHomeDTO">
        <id column="id" property="id"/>
        <result column="article_cover" property="articleCover"/>
        <result column="article_title" property="articleTitle"/>
        <result column="article_content" property="articleContent"/>
        <result column="create_time" property="createTime"/>
        <result column="is_top" property="isTop"/>
        <result column="category_id" property="categoryId"/>
        <result column="category_name" property="categoryName"/>
        <collection property="tagList" ofType="com.star.inf.dto.TagDTO">
            <id column="tag_id" property="id"/>
            <result column="tag_name" property="tagName"/>
        </collection>
    </resultMap>

    <resultMap id="articlePreviewResultMap" type="com.star.inf.dto.ArticlePreviewDTO">
        <id column="id" property="id"/>
        <result column="article_cover" property="articleCover"/>
        <result column="article_title" property="articleTitle"/>
        <result column="create_time" property="createTime"/>
        <result column="category_id" property="categoryId"/>
        <result column="category_name" property="categoryName"/>
        <collection property="tagList" ofType="com.star.inf.dto.TagDTO">
            <id column="tag_id" property="id"/>
            <result column="tag_name" property="tagName"/>
        </collection>
    </resultMap>

    <resultMap id="articleResultMap" type="com.star.inf.dto.ArticleDTO">
        <id column="id" property="id"/>
        <result column="article_cover" property="articleCover"/>
        <result column="article_title" property="articleTitle"/>
        <result column="article_content" property="articleContent"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="category_id" property="categoryId"/>
        <result column="category_name" property="categoryName"/>
        <collection property="tagList" ofType="com.star.inf.dto.TagDTO">
            <id column="tag_id" property="id"/>
            <result column="tag_name" property="tagName"/>
        </collection>
    </resultMap>

    <resultMap id="articleBackResultMap" type="com.star.inf.dto.ArticleBackDTO">
        <id column="id" property="id"/>
        <result column="article_cover" property="articleCover"/>
        <result column="article_title" property="articleTitle"/>
        <result column="create_time" property="createTime"/>
        <result column="type" property="type"/>
        <result column="is_top" property="isTop"/>
        <result column="is_delete" property="isDelete"/>
        <result column="status" property="status"/>
        <result column="category_name" property="categoryName"/>
        <collection property="tagList" ofType="com.star.inf.dto.TagDTO">
            <id column="tag_id" property="id"/>
            <result column="tag_name" property="tagName"/>
        </collection>
    </resultMap>

    <select id="listArticles" resultMap="articleHomeResultMap">
        SELECT a.id,
               article_cover,
               article_title,
               SUBSTR( article_content, 1, 500 ) AS article_content,
               a.type,
               a.is_top,
               a.create_time,
               a.category_id,
               category_name,
               t.id AS tag_id,
               t.tag_name
        FROM (
                 SELECT id,
                        article_cover,
                        article_title,
                        article_content,
                        type,
                        is_top,
                        create_time,
                        category_id
                 FROM tb_article
                 WHERE is_delete = 0
                 AND status = 1
                 ORDER BY is_top DESC, id DESC
                     LIMIT #{current}, #{size}
             ) a
                 JOIN tb_category c ON a.category_id = c.id
                 JOIN tb_article_tag atg ON a.id = atg.article_id
                 JOIN tb_tag t ON t.id = atg.tag_id
        ORDER BY a.is_top DESC, a.id DESC
    </select>

    <select id="listArticlesByCondition" resultMap="articlePreviewResultMap">
        SELECT a.id,
        article_cover,
        article_title,
        a.create_time,
        a.category_id,
        category_name,
        t.id AS tag_id,
        t.tag_name
        FROM
        (
        SELECT id,
        article_cover,
        article_title,
        article_content,
        create_time,
        category_id
        FROM tb_article
        <where>
            <if test="condition.categoryId != null">
                category_id = #{condition.categoryId}
            </if>
            <if test="condition.tagId != null">
                id IN (
                SELECT
                article_id
                FROM
                tb_article_tag
                WHERE
                tag_id = #{condition.tagId})
            </if>
        </where>
        AND is_delete = 0
        AND status = 1
        ORDER BY id DESC
        LIMIT #{current}, #{size}
        ) a
        JOIN tb_category c ON a.category_id = c.id
        JOIN tb_article_tag atg ON a.id = atg.article_id
        JOIN tb_tag t ON t.id = atg.tag_id
    </select>

    <select id="getArticleById" resultMap="articleResultMap">
        SELECT a.id,
               article_cover,
               article_title,
               article_content,
               a.create_time,
               a.update_time,
               a.category_id,
               category_name,
               t.id AS tag_id,
               t.tag_name
        FROM tb_article a
                 JOIN tb_category c ON a.category_id = c.id
                 JOIN tb_article_tag atg ON a.id = atg.article_id
                 JOIN tb_tag t ON t.id = atg.tag_id
        WHERE a.id = #{articleId}
    </select>

    <select id="listArticlesBack" resultMap="articleBackResultMap">
        SELECT a.id,
        article_title,
        article_cover,
        type,
        is_top,
        a.is_delete,
        a.create_time,
        category_name,
        t.id AS tag_id,
        t.tag_name
        FROM
        (
        SELECT id,
        article_title,
        article_cover,
        type,
        is_top,
        is_delete,
        status,
        create_time,
        category_id
        FROM tb_article
        <where>
            is_delete = #{condition.isDelete}
            <if test="condition.status != null">
                and status = #{condition.status}
            </if>
            <if test="condition.keywords != null">
                and article_title like concat('%', #{condition.keywords}, '%')
            </if>
            <if test="condition.categoryId != null">
                and category_id = #{condition.categoryId}
            </if>
            <if test="condition.type != null">
                and type = #{condition.type}
            </if>
            <if test="condition.tagId != null">
                and id in
                (
                SELECT
                article_id
                FROM
                tb_article_tag
                WHERE
                tag_id = #{condition.tagId}
                )
            </if>
        </where>
        ORDER BY is_top DESC, id DESC
        LIMIT #{current}, #{size}
        ) a
        LEFT JOIN tb_category c ON a.category_id = c.id
        LEFT JOIN tb_article_tag atg ON a.id = atg.article_id
        LEFT JOIN tb_tag t ON t.id = atg.tag_id
        ORDER BY is_top DESC, a.id DESC
    </select>

    <select id="countArticlesBack" resultType="java.lang.Long">
        SELECT count(1)
        from tb_article
        <where>
            is_delete = #{condition.isDelete}
            <if test="condition.keywords != null">
                and article_title like concat('%', #{condition.keywords}, '%')
            </if>
        </where>
    </select>

    <select id="listArticleRank" resultType="com.star.inf.entity.Article">
        SELECT id,
        article_title
        FROM tb_article
        WHERE
        id IN
        <foreach collection="articleIdList" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        ORDER BY field
        <foreach collection="articleIdList" item="item" open="(id," separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="listArticleStatistics" resultType="com.star.inf.dto.ArticleStatisticsDTO">
        SELECT
            DATE_FORMAT( create_time, "%Y-%m-%d" ) AS date,
            COUNT( 1 ) AS count
        FROM
            tb_article
        GROUP BY
            date
        ORDER BY
            date DESC
    </select>
    <select id="listArticleRecommends" resultType="com.star.inf.dto.ArticleRecommendDTO">
        SELECT
            id,
            article_title,
            article_cover,
            create_time
        FROM
            (
                SELECT DISTINCT
                    article_id
                FROM
                        ( SELECT tag_id FROM tb_article_tag WHERE article_id = #{articleId} ) t
                            JOIN tb_article_tag t1 ON t.tag_id = t1.tag_id
                WHERE
                    article_id != #{articleId}
            ) t2
                JOIN tb_article a ON t2.article_id = a.id
        WHERE a.is_delete = 0
        ORDER BY
            is_top DESC,id DESC
            LIMIT 6
    </select>

</mapper>
